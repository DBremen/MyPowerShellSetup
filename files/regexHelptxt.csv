Sequence,Description,Category,Example,Result,Explanation
\a,Alert (bell),Character escape,"""`a""  -match '\a'",TRUE,
\b,Backspace (supported only in character class),Character escape,"""`b"" -match '\b'",TRUE,
\n,Newline,Character escape,"""`n"" match '\n'",TRUE,
\r,Carriage return,Character escape,"""`r"" -match '\r'",TRUE,
\t,Horizontal tab,Character escape,"""`t"" -match '\t'",TRUE,
\v,Vertical tab,Character escape,"""`v"" -match '\v'",TRUE,
\0octal,Character specified by a two-digit octal code.,Character escape,-match '\015?\012',match unix and dos end of line,
\xhex,Character specified by a two-digit hexadecimal code.,Character escape,,,
\uhex,Character specified by a four-digit hexadecimal code.,Character escape,,,
[...],Matches any one character listed,Character classes,('abcdefg' | sls '[ade]' -AllMatches).Matches.Value,"a, d, e",
[^...],Matches any character not listed,Character classes,('abcdefg' | sls '[^c-f]' -AllMatches).Matches.Value,"a, b, g",
[a-z],A range or characters.,Character classes,(1..8 | sls '[3-5]' -AllMatches).Matches.Value,"3, 4, 5",
[a-z -[ae]],Class subtraction,Character classes,('abcde' | sls '[a-z-[aeiou]]' -AllMatches).Matches.Value,"b, c, d",
.,"Any character, except a line terminator (unless single-line mode, s).",Character classes,,,
\w,Word character.,Character classes,,,
\W,Non-word character.,Character classes,,,
\d,Digit.,Character classes,,,
\D,Non-digit.,Character classes,,,
\s,Whitespace character.,Character classes,"[regex]::Matches('int_ ctr','\s\S')",,
\S,Non-whitespace character.,Character classes,"[regex]::Matches('id A1.3','\w\s')",,
\p{prop},Character contained by given Unicode block or property.,Character classes,,,
\P{prop},Character not contained by given Unicode block or property.,Character classes,,,
.,Wildcard: Matches any single character except \n.,Character classes,,,
^,"Start of string, or after any newline if in MULTILINE mode.",Anchors,"""901-333-"" -match '^\d{3}'",,
\A,"Beginning of string, in all match modes.",Anchors,,,
$,"End of string, or before any newline if in MULTILINE mode.",Anchors,"""-901-333"" -match '$\d{3}$'",,
\Z,"End of string but before any final line terminator, in all match modes.",Anchors,,,
\z,"End of string, in all match modes.",Anchors,,,
\b,Boundary between a \w character and a \W character.,Anchors,"Jeff Jeffang Friedl -replace '\bJeff\b','Jeffrey'",,
\B,Not-word-boundary.,Anchors,,,
\G,End of the previous match.,Anchors,"[regex]::Matches('(1)(3)(5)(7](9)','\G\(\d\)')",Finds only contiguous matches (9) is not matched,
(?=...),Positive look ahead: Matches if it is followed by y,Lookarounds,"[regex]::Match('bubblegums hyperbubble bubble','bubble(?=gum)').value","matches ""bubble"" immediately followed by ""gum""",
(?!...),Negagive look ahead: Matches x if it is not followed by y,Lookarounds,"[regex]::Matches('bubble bubblegum bubblexxx','bubble(?!gum)').Value","matches bubble"" not followed by ""gum""",
(?<=...),Positive look behind: matches x if it is preceded by y,Lookarounds,"[regex]::Matches('bootgum gumboot','(?<=gum)boot')","matches ""boot"" preceded by ""gum""",
(?<!...),Negative look behind: matches x if it is not preceded by y,Lookarounds,"[regex]::Matches('bootgum gumboot','(?<!gum)boot')","matches ""boot"" not preceded by ""gum""",
Singleline (?s),"Dot (.) matches any character, including a line terminator. Treat multi-line text as single text.",Options,,,
Multiline (?m),^ and $ match next to embedded line terminators.,Options,[Text.RegularExpressions.RegexOptions]::IgnoreCase,,
IgnorePatternWhitespace (?x),Ignore whitespace and allow embedded comments starting with #.,Options,Te`nst -match '(?sx)T e.st',,
IgnoreCase (?i),Case-insensitive match based on characters in the current culture.,Options,,,
ExplicitCapture (?n),"Allow named capture groups, but treat parentheses as non-capturing groups.",Options,,,
(?imnsx-imnsx),Turn match flags on or off for rest of pattern.,Options,<B>(?i)very(?-i)</B>,match very case-sensitive while tags are matched in-casesentive,
(?imnsx-imnsx:...),Turn match flags on or off for the rest of the subexpression.,Options,<B>(?i:very)</B>,match very case-sensitive while tags are matched in-casesentive,
(?#...),Treat substring as a comment.,Comments,,,
#...,Treat rest of line as a comment in /x mode.,Comments,,,
(...),"Grouping. Submatches fill \1,\2,... and $1,$2,....",Grouping,,,
\n,"In a regular expression, match what was matched by the nth earlier submatch.",Grouping,"[regex]::Matches('seeekee','(\w)\1');or words ""(\w+)\s(\1)\W""",match duplicate characters,
$n,"In a replacement string, contains the nth earlier submatch.",Grouping,"'Mary Smith' -replace '(.*) (.*)','$2, $1'",swap firstname last name,
(?<name>...),"Captures matched substring into group, 'name'.",Grouping,"""2C"" -imatch '^(?<number>[0-9]+)(?<unit>[CF])$'",,
(?:...),"Grouping-only parentheses, no capturing.",Grouping,"""foo bar"" -match '(?:foo).(?<first>bar)'",,
*,Match 0 or more times.,Quantifiers,'Date: 3/23/2012' -imatch '^Date: (.*)',,
+,Match 1 or more times.,Quantifiers,,,
?,Match 1 or 0 times.,Quantifiers,,,
{n},Match exactly n times.,Quantifiers,,,
"{n,}",Match at least n times.,Quantifiers,,,
"{x,y}","Match at least x times, but no more than y times.",Quantifiers,,,
*?,"Match 0 or more times, but as few times as possible.",Quantifiers,,,
+?,"Match 1 or more times, but as few times as possible.",Quantifiers,,,
??,"Match 0 or 1 times, but as few times as possible.",Quantifiers,,,
"{n,}?","Match at least n times, but as few times as possible.",Quantifiers,,,
"{x,y}?","Match at least x times, no more than y times, but as few times as possible.",Quantifiers,,,
"$1, $2, ...",Captured submatches.,Substitutions,"'foo bar' -replace '(foo).+(ar)', '$2 z$2 $1'",,
${name},Matched text of a named capture group.,Substitutions,"""Test"" -replace ""(?<pre>.*)st"",'${pre}ar'",,
$',Text before match (backtick),Substitutions,"Test -replace ""est$"",'Te$`'",,
$&,Text of match.,Substitutions,"Test -replace ""^.*$"",'Found: $&'",,
$',Text after match.,Substitutions,"Test -replace ""^Tes"",'Res$'''",,
$+,Last parenthesized match.,Substitutions,"Testing -replace ""(.*)ing"",'$+ed'",,
$_,Copy of original input string.,Substitutions,"Testing -replace ""(.*)ing"",'String: $_'",,
..|...,Matches any one element separated by the vertical bar (|) character.,Alternation,"4th|4 -eq ""4(th)?""",,
(?(expression?)yes?|?no?),"Matches?yes?if the regular expression pattern designated by?expression?matches; otherwise, matches the optional?no?part.?",Alternation,"""A10 C103 910"" -match '(?(A)A\d{2}\b|\b\d{3}\b)'",,
,Add character to the beginning of every line,Examples,"(cat  $env:temp\test.txt -raw) -replace '(?m)^', 'x'",?m only used because of -raw,
,Add character to the end of every line,Examples,"cat  $env:temp\test.txt -raw) -replace '(?m)$', 'x' ",?m only used because of -raw,
,Match all characters except punctuation and decimal digit characters.,Examples,[^\p{P}\d],,
,Find last alternative not matching other alternatives,Examples,NotThis|NotThat|GoAway|(WeWantThis),Use in conjunction with Matches.Groups[1],
,Remove duplicate words,Examples,"dupes words words following each other' -replace '\b(\w+)(\s+\1){1,}\b', '$1'",,
,Add prefix to start of every word,Examples,"'first,second,third' -replace '(?<!\w)(?=\w)','pre'","input can also be separated by other chars than ,",
,Add postfix to the end of every word,Examples,"'first,second,third' -replace '(?<=\w)(?!\w)','post'",,
,Use of match evaluator in replace,Examples,"[Regex]::Replace(""hello world"", '\b(\w)', { $args[0].Value.ToUpper() })",capitalize first letter after word boundary,
,Usage of -split with scriptblock,Examples,1234567890 -split { ($_ % 2) -eq 0 },Get only even numbers,
,"Line Contains both ""bubble"" and ""gum""",Examples,^(?=.*?\bbubble\b)(?=.*?\bgum\b).*,,
,"Line Contains ""bubble"" but Neither ""gum"" Nor ""bath""",Examples,^(?=.*bubble)(?!.*gum)(?!.*bath).*,,
,"Line does Not Contain ""boy""",Examples,^(?!.*boy).*,,
,Find spot between specific patterns and insert chars,Examples,"this is Jeffs car -replace '(?<=\bJeff)(?=s\b)','ï¿½'",Make Jeff's out of Jeffs,
,Replace html tags,Examples,"""<table>testing</table>"" -replace ""<[^>]+>"",""""",,
,Extract text within quotes,Examples,"[regex]::Matches('text ""within"" is cool', '(?<=\"").+?(?=\"")').Value",,
,Extract text within parenthesis,Examples,"([regex]::matches(""this is (a test) and a (second test) bla bla"",'\((.*?)\)').Groups.captures | where Name -eq 1).Value",,
,Split before specific character and include split char,Examples,$PROFILE -split '(?<=\\)'  ,"C:\ , Users\  , Tobias\  ",
,Split after specific char and inclcude char,Examples,($PROFILE -split '(?=\.)')  ,"...\WindowsPowerShell\Microsoft  , .PowerShell_profile  , .ps1  ",
,Split before and after specific pattern and include split chars,Examples, '-Path c:\windows -Filter *.exe'  -split '(?=-)(?<=\s)'  ,"-Path c:\windows  , B93-Filter *.exe",
,Replace extraceneous spaces,Examples,"$text -replace '\s{2,}', ' ' -replace '\s{1}\.', '.'",,
,Turn space delimted text into csv,Examples,"$txt -replace '[^\S^\r\n]{1,}',','",,
,Replace duplicate words (works also for consecutive duplicate words),Examples,"$txt -replace '\s*(.+)\s*\1\s*', '$1' ",,
,Replace only first occurrence,Examples,"([regex]$pattern='10\.2\.91\.52').replace([IO.File]::ReadAllText($filename),'localhost',1) ",,
